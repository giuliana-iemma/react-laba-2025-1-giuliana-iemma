{"version":3,"file":"index-CIX1ldkt.js","sources":["../../src/scripts/script-animation.js","../../src/scripts/script-toggle.js"],"sourcesContent":["//Will use IntersectionObserver, JS API that allows me to see where the element is in the screen and see when it enters the area so that we can animate it if that happens\n\n//STRUCTURE\n/* const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            // Acción cuando el elemento es visible\n        } else {\n            // Acción cuando el elemento no es visible\n        }\n    });\n}, {\n    root: null, //Viewport is null\n    rootMargin: '0px',\n    threshold: 0\n});\n\nconst elements = document.querySelectorAll('.element');\nelements.forEach(element => {\n    observer.observe(element);\n});\n */\n\n//Select all elements with className project\nconst projects = document.querySelectorAll('.project');\n\nconsole.log(projects);\n\nconst observer = new IntersectionObserver(\n  (projects) => {\n    projects.forEach((project) => {\n      console.log(project);\n\n      // Check if the project is in the viewport\n      if (project.isIntersecting) {\n        console.log('obseving');\n        //If visible, we add the class animate to it\n        project.target.classList.add('animate');\n        //Stops observation after animation so that it not repeats\n        observer.unobserve(project.target);\n      } else {\n        project.target.classList.remove('animate');\n      }\n    });\n  },\n  {\n    //Options\n    //At least 50% of the project has to be on screen for the animation to begin\n    root: null, //Viewport\n    threshold: 0.5,\n  }\n);\n\nprojects.forEach((project) => {\n  observer.observe(project);\n});\n","let toggleButton = document.getElementById('theme-toggle');\n\ntoggleButton.addEventListener('click', function () {\n  // Change the body to dark-mode\n  document.body.classList.toggle('dark-mode');\n\n  // Find the container\n\n  const container = document.getElementById('container');\n  container.classList.toggle('dark-mode');\n\n  // Theme icon\n  const hiddenIcon = document.querySelector('#theme-toggle .theme-toggle__image--hidden');\n  const shownIcon = document.querySelector('#theme-toggle .theme-toggle__image');\n\n  if (shownIcon && hiddenIcon) {\n    // Check if the icons exist.\n    // If they do, reset the className and toggle it to the initial classes\n    /* shownIcon.className = 'theme-toggle__image';  \n    hiddenIcon.className = 'theme-toggle__image--hidden';   */\n\n    // Alternate the classes to show or hide the icon\n    hiddenIcon.classList.toggle('theme-toggle__image--hidden');\n    shownIcon.classList.toggle('theme-toggle__image--hidden');\n  }\n});\n"],"names":["projects","observer","project","toggleButton","hiddenIcon","shownIcon"],"mappings":"ssBAwBA,MAAMA,EAAW,SAAS,iBAAiB,UAAU,EAErD,QAAQ,IAAIA,CAAQ,EAEpB,MAAMC,EAAW,IAAI,qBAClBD,GAAa,CACZA,EAAS,QAASE,GAAY,CAC5B,QAAQ,IAAIA,CAAO,EAGfA,EAAQ,gBACV,QAAQ,IAAI,UAAU,EAEtBA,EAAQ,OAAO,UAAU,IAAI,SAAS,EAEtCD,EAAS,UAAUC,EAAQ,MAAM,GAEjCA,EAAQ,OAAO,UAAU,OAAO,SAAS,CAEjD,CAAK,CACF,EACD,CAGE,KAAM,KACN,UAAW,EACf,CACA,EAEAF,EAAS,QAASE,GAAY,CAC5BD,EAAS,QAAQC,CAAO,CAC1B,CAAC,ECvDD,IAAIC,EAAe,SAAS,eAAe,cAAc,EAEzDA,EAAa,iBAAiB,QAAS,UAAY,CAEjD,SAAS,KAAK,UAAU,OAAO,WAAW,EAIxB,SAAS,eAAe,WAAW,EAC3C,UAAU,OAAO,WAAW,EAGtC,MAAMC,EAAa,SAAS,cAAc,4CAA4C,EAChFC,EAAY,SAAS,cAAc,oCAAoC,EAEzEA,GAAaD,IAOfA,EAAW,UAAU,OAAO,6BAA6B,EACzDC,EAAU,UAAU,OAAO,6BAA6B,EAE5D,CAAC"}